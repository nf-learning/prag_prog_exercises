/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/8.1.1/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'antlr'
    id 'idea'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation(platform('org.junit:junit-bom:5.9.1'))
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.1'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:31.1-jre'
    implementation "org.antlr:antlr4-runtime:4.13.0"
    antlr "org.antlr:antlr4:4.13.0"

}

generateGrammarSource {
    maxHeapSize = "128m"
    arguments += ['-package','timebnf', '-visitor']
}

compileJava.dependsOn generateGrammarSource

sourceSets {
    generated {
        java.srcDir 'generated-src/antlr/main/timebnf'
    }
}

clean {
    delete "generated-src"
}

idea {
    module {
        sourceDirs+= file("generated-src/antlr/main")
    }
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

application {
    // Define the main class for the application.
    mainClass = 'timebnf.App'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}
